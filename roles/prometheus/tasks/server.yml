- name: Create App directory Directory
  ansible.builtin.file:
    path: /opt/prometheus
    state: directory

- name: Prometheus server Installation
  ansible.builtin.unarchive:
    src: "{{ prometheus_server_url }}"
    dest: /opt/
    remote_src: true

# - name: Copy Prometheus Installed folder to prometheus folder
#   ansible.builtin.copy:
#     src: /opt/prometheus/{{prometheus_dir}}
#     dest: /opt/prometheus
#     remote_src: true

- name: move installed package to different foldere
  ansible.builtin.shell: mv /opt/{{prometheus_dir}}/ /opt/prometheus/


# - name: Recursively remove directory
#   ansible.builtin.file:
#     path: /opt/prometheus/{{prometheus_dir}}
#     state: absent

# Service file placed from template folder
- name: Copy Prometheus Service file to systemD exporter
  ansible.builtin.template:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service
    remote_src: true

- name: Update Prometheus configuration
  ansible.builtin.template:
    src: prometheus.yml
    dest: /opt/prometheus/prometheus.yml

# as you updated config abvoe need a restart
- name: Restart Prometheus
  ansible.builtin.systemd:
    name: prometheus
    state: started
    enabled: true
    daemon-reload: true

# - name: Update Prometheus configuration
#   ansible.builtin.template:
#     src: prometheus.yml
#     dest: /opt/prometheus/prometheus.yml

##Cppying Aleart configuration to prometheus 
# 2nd update - Implemtened LOOP to handle for every servcie
# - name: Copy Alerts confugraiotn for server down
#   ansible.builtin.template:
#     src: "{{ item }}"
#     dest: /opt/prometheus/{{ item }}
#   loop: "{{ alert_files }}"

# - name: Restart Prometheus
#   ansible.builtin.systemd:
#     name: prometheus
#     state: restarted
#     enabled: true
#     daemon-reload: true

# - name: Check prometheus is started
#   ansible.builtin.shell: netstat -lntp | grep 9090


# #Alerts Manager Installation
# # WIP
# - name: Alerts Manager Installation
#   ansible.builtin.unarchive:
#     src: "{{ alerts_manager_url }}"
#     dest: /opt
#     remote_src: true

# #Alerts Manager Installation
# - name: Copy Alerts Manager Service file to systemD exporter
#   ansible.builtin.template:
#     src: alertmanager.service
#     dest: /etc/systemd/system/alertmanager.service
#     remote_src: true



# ##Alert Manager Configuraiton
# - name: Update Alert manager configuraiton
#   ansible.builtin.template:
#     src: alertmanager.yml
#     dest: /opt/{{alert_manager_dir}}/alertmanager.yml

# #Alert Manager restart
# - name: Restart AlertManager 
#   ansible.builtin.systemd:
#     name: alertmanager
#     state: restarted
#     enabled: true
#     daemon-reload: true

# #Check alert manager is started
# - name: Check Alertmanager is started
#   ansible.builtin.shell: netstat -lntp | grep 9093



  
#GRAFANA INSTALLATION:

# #grafana repo file copying
# # /etc/yum.repos.d/mongo.repo
# - name: Setup Grafana YUM repo file
#   ansible.builtin.copy:
#     src: grafana.repo
#     dest: /etc/yum.repos.d/grafana.repo

# # yum install mongodb-org -y 
# - name: Grafana installation
#   ansible.builtin.yum:
#     name: grafana-9.5.2-1.x86_64
#     state: installed

# - name: Restart and enable Grafana 
#   ansible.builtin.systemd:
#     name: grafana
#     state: started
#     enabled: true

#===============

# - name: Create App directory Directory
#   ansible.builtin.file:
#     path: /opt/prometheus
#     state: directory

# - name: Prometheus server Installation
#   ansible.builtin.unarchive:
#     src: "{{ prometheus_server_url }}"
#     dest: /opt/prometheus
#     remote_src: true

# # Service file placed from template folder
# - name: Copy Prometheus Service file to systemD exporter
#   ansible.builtin.template:
#     src: prometheus.service
#     dest: /etc/systemd/system/prometheus.service
#     remote_src: true

# - name: Update Prometheus configuration
#   ansible.builtin.template:
#     src: prometheus.yml
#     dest: /opt/prometheus/prometheus-2.44.0.linux-amd64/prometheus.yml

# # as you updated config abvoe need a restart
# - name: Restart Prometheus
#   ansible.builtin.systemd:
#     name: prometheus
#     state: restarted
#     enabled: true
#     daemon-reload: true