# install Nginx
# yum install nginx -y 
- name: Install nginx
  ansible.builtin.yum:
    name: nginx
    state: installed


#DONE
# Remove the default content that web server is serving.
# rm -rf /usr/share/nginx/html/* 

# - name: Recursively remove directory
#   ansible.builtin.file:
#     path: /usr/share/nginx/html/
#     state: absent

- name: Remove file (delete file)
  ansible.builtin.file:
    path: /usr/share/nginx/html/*
    state: absent


# Download the frontend content
# curl -o /tmp/frontend.zip https://roboshop-artifacts.s3.amazonaws.com/frontend.zip 
- name: Unarchive a file that needs to be downloaded (added in 2.0)
  ansible.builtin.unarchive:
    src: https://roboshop-artifacts.s3.amazonaws.com/frontend.zip 
    dest: /usr/share/nginx/html/
    remote_src: yes


#PENDING
# Start & Enable Nginx service
# systemctl enable nginx 
# systemctl start nginx 






# Extract the frontend content.
# cd /usr/share/nginx/html 
# unzip /tmp/frontend.zip


# Create Nginx Reverse Proxy Configuration.
# vim /etc/nginx/default.d/roboshop.conf 

# Add the following content

# /etc/nginx/default.d/roboshop.conf
# proxy_http_version 1.1;
# location /images/ {
#   expires 5s;
#   root   /usr/share/nginx/html;
#   try_files $uri /images/placeholder.jpg;
# }
# location /api/catalogue/ { proxy_pass http://localhost:8080/; }
# location /api/user/ { proxy_pass http://localhost:8080/; }
# location /api/cart/ { proxy_pass http://localhost:8080/; }
# location /api/shipping/ { proxy_pass http://localhost:8080/; }
# location /api/payment/ { proxy_pass http://localhost:8080/; }

# location /health {
#   stub_status on;
#   access_log off;
# }

# NOTE
# Ensure you replace the localhost with the actual ip address of those component server. 
#Word localhost is just used to avoid the failures on the Nginx Server.

# Restart Nginx Service to load the changes of the configuration.
# systemctl restart nginx 